#pragma kernel CSMain

Texture2D<float4> BaseMap;
RWTexture2D<unorm float4> SpecularMap;
uint2 TextureSize;
bool FlipY;

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    uint2 uv = id.xy;
    if (FlipY)
        uv.y = TextureSize.y - 1 - uv.y;
    
    float4 baseCol = BaseMap[uv];
    float grayscale = dot(baseCol.rgb, float3(0.299, 0.587, 0.114));
    float reflectivity = saturate(grayscale + 0.5); // reflectivity is based on the greyscale value
    float4 specCol = float4(baseCol.r * reflectivity, baseCol.g * reflectivity, baseCol.b * reflectivity, 1.0); // apply reflectivity to the color 
    SpecularMap[id.xy] = specCol;                                                                               // to get the specular color
}